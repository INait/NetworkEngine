
/*
	This file contain common data structures (for all modules)

	======= *.proto files short style-guide =====
	Formatting:
		Tab size - 4
		Indent style - Allman
		All alignment and indentation with tabs (no spaces)
		Message tag numbers right aligned
	Naming:
		Type names - CamelCase
		Field names - unix_style
	Message name posfixes:
		Request - command request
		Response - command response
		*Event - server event
		Errors - enum with error codes
	Field name posfixes:
		*_id - entity identifier
		*_ts - unix timestamp (milliseconds)
		*_backtimer - time interval from now to some event (milliseconds)
	Namespace rules:
		Each module has own namespace.
		Namespace "proto" is top level (it contain others)
	Module *.proto file structure:
		1. Package (namespace) definition.
		2. Module identifier.
		3. Common structures (used within this module).
		4. Command identifiers (enum CommandIds).
		5. Command definitions (set of pairs/triples: XxxReq, XxxResp [, XxxErr]).
		6. Event identifiers (enum EventIds).
		7. Event definitions (set of XxxEv structures).
*/

package proto.common;

// DEFINE_OPTIONS_HERE

message DefaultResponse
{
	required sint32 error_code				= 1;
	// return:
	//		>= 0	- All right, possible some payload
	//		< 0		- Error code
	optional string error_message			= 2;
}

message DefaultRequest
{
	required int32 user_id				= 1;
}

message EmptyRequest
{
}

message EmptyResponse
{
}

message EmptyEvent
{
}

message UserInfo
{
	required int32 user_id		= 1;
}

message Point
{
	required int32 x		= 1;
	required int32 y		= 2;
}